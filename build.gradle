plugins {
    id 'org.jetbrains.intellij' version "0.4.16"
}

def pluginVersion = '0.85'
def ideaVersion = '2019.3'
version = pluginVersion + '-' + ideaVersion

patchPluginXml {
    changeNotes """
        <ul>
            <li>Fix bsc path</li>
            <li>New indexing of file modules</li>
            <li>Use Rincewind 0.6</li>
            <li>File | New menu as OCaml and ReasonML templates</li>
            <li>Display cmt file in a custom editor</li>
            <li>200 - OCaml SDK can be set at the module level</li>
            <li>199 - Prepare for dynamic plugins</li>
            <li>196 - Redesign content root finding</li>
        </ul>

        <p><a href="https://github.com/reasonml-editor/reasonml-idea-plugin/blob/master/CHANGELOG.md">Full change log...</a></p>

        <p/>
        <p>To see how to integrate reason tools (bsc, refmt), go to the website.</p>
    """
}

allprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    sourceSets {
        main {
            java.srcDirs 'src', 'gen'
            resources.srcDirs 'resources', 'plugins/resources'
        }
        test {
            java.srcDir 'tests'
        }
    }

    apply plugin: 'org.jetbrains.intellij'
    intellij {
        pluginName 'reasonml-plugin-idea'
        type 'IU'
        version '193.5233.102' // https://www.jetbrains.com/intellij-repository/releases
        updateSinceUntilBuild = false
        plugins = ['java',
                   'JavaScriptLanguage',
                   'com.jetbrains.hackathon.indices.viewer:1.3',
                   'PsiViewer:193-SNAPSHOT' // https://plugins.jetbrains.com/plugin/227-psiviewer/versions
        ]
    }

    runIde {
        systemProperty "refmtWidth", "120"
        jvmArgs = ['--add-exports=java.base/jdk.internal.vm=ALL-UNNAMED', '-Dcompiler.process.debug.port=5005', '-Xmx1024m']
    }

    task testCompilation(type: Test, group: 'Verification', dependsOn: [classes, testClasses]) {
        testLogging {
            exceptionFormat = 'full'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile project('jps-plugin')
}

apply plugin: 'idea'
idea {
    project {
        jdkName = 1.8
        languageLevel = 1.8
    }
    module {
        generatedSourceDirs += file('gen')
    }
}

verifyPlugin {
    pluginDirectory "resources"
}

/*
git log --oneline | Select-String -Pattern "(191|192|193) -" | %{$_.Line.Split(" ")[0]}
*/
