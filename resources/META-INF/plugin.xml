<idea-plugin version="2">
    <id>reasonml</id>
    <name>ReasonML language plugin</name>
    <version>0.27</version>
    <vendor email="giraud.contact@yahoo.fr" url="https://github.com/giraud/reasonml-idea-plugin">hgiraud</vendor>

    <description><![CDATA[
      ReasonÂ language plugin.
    ]]></description>

    <change-notes><![CDATA[
      <b>version 0.27</b>
      <ul>
        <li>Improving reason parser</li>
        <li>Fixed an IllegalArgumentException in KillableColoredProcessHandler</li>
        <li>Structure view enabled for Ocaml files</li>
      </ul>

      <b>version 0.26</b>
      <ul>
        <li>Improving parsers</li>
      </ul>

      <b>version 0.25</b>
      <ul>
        <li>Add a very lightweight support of OCaml, to have more syntax coloring and no incorrect parser errors (#14)</li>
      </ul>

      <b>version 0.24</b>
      <ul>
        <li>Add Number and Type argument in color settings (#13).</li>
      </ul>

      <b>version 0.23</b>
      <ul>
        <li>New default values for bsb and refmt. bsb=> node_modules/bs-platform/bin/bsb.exe, refmt=> node_modules/bs-platform/bin/refmt3.exe</li>
      </ul>

      <b>version 0.22</b>
      <ul>
        <li>Parse Bsb super errors and use them to annotate source code</li>
      </ul>

      <p>Work in progress.</p>
      <p>To see how to integrate reason tools (merlin, refmt), go to the website.</p>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="141.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>

    <application-components>
        <component>
            <interface-class>reason.merlin.MerlinService</interface-class>
            <implementation-class>reason.merlin.MerlinServiceComponent</implementation-class>
        </component>
        <component>
            <implementation-class>reason.ide.ReasonDocumentManager</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>reason.ide.RmlProjectTracker</implementation-class>
        </component>
        <component>
            <implementation-class>reason.bs.BsbCompiler</implementation-class>
        </component>
        <component>
            <interface-class>reason.bs.BsbErrorsManager</interface-class>
            <implementation-class>reason.bs.BsbErrorsManagerImpl</implementation-class>
        </component>
    </project-components>

    <extensions defaultExtensionNs="com.intellij">
        <!--
         | File types
         -->

        <!-- Reason -->
        <fileTypeFactory implementation="reason.ide.files.RmlInterfaceFileTypeFactory"/>
        <fileTypeFactory implementation="reason.ide.files.RmlFileTypeFactory"/>
        <!-- Ocaml -->
        <fileTypeFactory implementation="reason.ide.files.OclInterfaceFileTypeFactory"/>
        <fileTypeFactory implementation="reason.ide.files.OclFileTypeFactory"/>

        <!--
         | Parsers
         -->

        <!-- Reason -->
        <lang.parserDefinition language="ReasonML" implementationClass="reason.lang.RmlParserDefinition"/>
        <lang.syntaxHighlighterFactory key="ReasonML"
                                       implementationClass="reason.ide.highlight.RmlSyntaxHighlighterFactory"/>
        <!-- Ocaml -->
        <lang.parserDefinition language="Ocaml" implementationClass="reason.lang.OclParserDefinition"/>
        <lang.syntaxHighlighterFactory key="Ocaml"
                                       implementationClass="reason.ide.highlight.RmlSyntaxHighlighterFactory"/>

        <!--
         | Structure
         -->

        <lang.psiStructureViewFactory language="ReasonML"
                                      implementationClass="reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Ocaml"
                                      implementationClass="reason.ide.structure.StructureViewFactory"/>

        <!--
         | Others
         -->

        <colorSettingsPage implementation="reason.ide.settings.RmlColorSettingsPage"/>

        <annotator language="ReasonML" implementationClass="reason.ide.highlight.RmlAnnotator"/>
        <externalAnnotator language="ReasonML" implementationClass="reason.ide.highlight.MerlinErrorAnnotator"/>
        <externalAnnotator language="ReasonML" implementationClass="reason.bs.BsbErrorAnnotator"/>

        <completion.contributor language="ReasonML" implementationClass="reason.ide.RmlCompletionContributor"/>

        <lang.commenter language="ReasonML" implementationClass="reason.ide.RmlCommenter"/>
        <lang.foldingBuilder language="ReasonML" implementationClass="reason.ide.folding.RmlFoldingBuilder"/>
        <lang.braceMatcher language="ReasonML" implementationClass="reason.ide.RmlPairedBraceMatcher"/>

        <codeInsight.parameterNameHints language="ReasonML"
                                        implementationClass="reason.ide.hints.SignatureProvider"/>
        <editor.linePainter implementation="reason.ide.hints.RmlEditorLinePainter"/>

        <toolWindow id="Bucklescript" anchor="bottom" factoryClass="reason.bs.BsbToolWindowFactory"/>

        <lang.elementManipulator forClass="reason.psi.PsiModule"
                                 implementationClass="reason.psi.PsiModuleManipulator"/>
        <lang.elementManipulator forClass="reason.psi.PsiModuleName"
                                 implementationClass="reason.psi.PsiModuleNameManipulator"/>

        <projectService serviceInterface="reason.merlin.MerlinService"
                        serviceImplementation="reason.merlin.MerlinServiceComponent"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <action id="reasonML.refmt" class="reason.ide.format.RefmtAction" text="Reformat code (refmt)">
            <add-to-group group-id="CodeFormatGroup" anchor="after" relative-to-action="ReformatCode"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift R"/>
        </action>
    </actions>

</idea-plugin>
