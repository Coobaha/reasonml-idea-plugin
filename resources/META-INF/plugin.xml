<idea-plugin>
    <id>reasonml</id>
    <name>ReasonML language plugin</name>
    <version>0.65.1</version>
    <vendor email="giraud.contact@yahoo.fr" url="https://github.com/giraud/reasonml-idea-plugin">H.Giraud</vendor>

    <description><![CDATA[
      Reason (and OCaml) language plugin.
    ]]></description>

    <change-notes><![CDATA[
        <ul>
            <li>Dune file were no more editable because of a change in the parser</li>
        </ul>

        <p><a href="https://github.com/reasonml-editor/reasonml-idea-plugin/blob/master/CHANGELOG.md">Full change log...</a></p>

        <p/>
        <p>To see how to integrate reason tools (bsc, refmt), go to the website.</p>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="143.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>

    <application-components>
    </application-components>

    <project-components>
        <component>
            <implementation-class>com.reason.build.dune.DuneManager</implementation-class>
        </component>
        <component>
            <interface-class>com.reason.build.annotations.ErrorsManager</interface-class>
            <implementation-class>com.reason.build.annotations.ErrorsManagerImpl</implementation-class>
        </component>
        <component>
            <implementation-class>com.reason.ide.ORProjectTracker</implementation-class>
        </component>
        <component>
            <interface-class>com.reason.build.bs.Bucklescript</interface-class>
            <implementation-class>com.reason.build.bs.BucklescriptManager</implementation-class>
        </component>
        <component>
            <interface-class>com.reason.hints.InsightManager</interface-class>
            <implementation-class>com.reason.hints.InsightManagerImpl</implementation-class>
        </component>
        <component>
            <implementation-class>com.reason.ide.hints.CmtiFileListener</implementation-class>
        </component>
        <component>
            <implementation-class>com.reason.build.bs.refmt.RefmtProcess</implementation-class>
        </component>
        <component>
            <interface-class>com.reason.build.bs.compiler.BsCompiler</interface-class>
            <implementation-class>com.reason.build.bs.compiler.BsCompiler</implementation-class>
        </component>
        <component>
            <implementation-class>com.reason.hints.RincewindProcess</implementation-class>
            <interface-class>com.reason.hints.RincewindProcess</interface-class>
        </component>
        <component>
            <implementation-class>com.reason.build.bs.insight.BsQueryTypesService</implementation-class>
            <interface-class>com.reason.build.bs.insight.BsQueryTypesService</interface-class>
        </component>
    </project-components>

    <actions>
        <!-- Add your actions here -->
        <action id="reason.refmt" class="com.reason.ide.actions.ReformatAction" text="Reformat code (refmt)">
            <add-to-group group-id="CodeFormatGroup" anchor="after" relative-to-action="ReformatCode"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift R"/>
        </action>
        <action id="com.reason.ide.actions.ConvertAction" class="com.reason.ide.actions.ConvertAction"
                text="Convert Reason-OCaml" description="Convert between Reason and OCaml code">
            <add-to-group group-id="EditMenu" anchor="last"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--
         | File types
         -->

        <!-- Reason -->
        <fileTypeFactory implementation="com.reason.ide.files.RmlInterfaceFileTypeFactory"/>
        <fileTypeFactory implementation="com.reason.ide.files.RmlFileTypeFactory"/>
        <!-- OCaml -->
        <fileTypeFactory implementation="com.reason.ide.files.OclInterfaceFileTypeFactory"/>
        <fileTypeFactory implementation="com.reason.ide.files.OclFileTypeFactory"/>
        <!-- OCamlP4 -->
        <fileTypeFactory implementation="com.reason.ide.files.Ml4FileTypeFactory"/>
        <!-- Dune -->
        <fileTypeFactory implementation="com.reason.ide.files.DuneFileTypeFactory"/>
        <!-- Binary -->
        <fileTypeFactory implementation="com.reason.ide.files.CmiFileTypeFactory"/>
        <fileTypeFactory implementation="com.reason.ide.files.CmtFileTypeFactory"/>

        <!--
         | Parsers
         -->

        <!-- Reason -->
        <lang.parserDefinition language="ReasonML" implementationClass="com.reason.lang.reason.RmlParserDefinition"/>
        <lang.syntaxHighlighterFactory language="ReasonML"
                                       implementationClass="com.reason.ide.highlight.RmlSyntaxHighlighterFactory"/>
        <!-- OCaml -->
        <lang.parserDefinition language="OCaml" implementationClass="com.reason.lang.ocaml.OclParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCaml"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCamlP4 -->
        <lang.parserDefinition language="OCamlP4" implementationClass="com.reason.lang.p4.OclP4ParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCamlP4"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- Dune -->
        <lang.parserDefinition language="Dune" implementationClass="com.reason.lang.dune.DuneParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Dune"
                                       implementationClass="com.reason.ide.highlight.DuneSyntaxHighlighterFactory"/>

        <!--
         | Structure / folding / comments
         -->

        <lang.psiStructureViewFactory language="ReasonML"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="OCaml"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>

        <lang.foldingBuilder language="ReasonML" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="OCaml" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <!--<lang.foldingBuilder language="Dune" implementationClass="com.reason.ide.folding.DuneFoldingBuilder"/>-->

        <lang.commenter language="ReasonML" implementationClass="com.reason.ide.comment.RmlCommenter"/>
        <lang.commenter language="OCaml" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Dune" implementationClass="com.reason.ide.comment.DuneCommenter"/>

        <lang.braceMatcher language="ReasonML" implementationClass="com.reason.ide.match.RmlPairedBraceMatcher"/>
        <lang.braceMatcher language="OCaml" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Dune" implementationClass="com.reason.ide.match.DunePairedBraceMatcher"/>

        <!--
         | Doc
         -->

        <lang.documentationProvider language="ReasonML"
                                    implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="OCaml" implementationClass="com.reason.ide.docs.DocumentationProvider"/>

        <!--
         | Search
         -->

        <stubIndex implementation="com.reason.ide.search.ModuleIndex"/>
        <stubIndex implementation="com.reason.ide.search.ModuleFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.ModuleCompIndex"/>
        <stubIndex implementation="com.reason.ide.search.LetIndex"/>
        <stubIndex implementation="com.reason.ide.search.ValIndex"/>
        <stubIndex implementation="com.reason.ide.search.TypeIndex"/>
        <stubIndex implementation="com.reason.ide.search.ExternalIndex"/>

        <lang.findUsagesProvider language="ReasonML" implementationClass="com.reason.ide.search.RmlFindUsagesProvider"/>
        <lang.findUsagesProvider language="OCaml" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>

        <gotoClassContributor implementation="com.reason.ide.go.MlModuleContributor"/>

        <!--
         | SDK & Settings
         -->

        <sdkType implementation="com.reason.ide.sdk.OCamlSDK"/>

        <projectService serviceInterface="com.reason.ide.settings.ReasonSettings"
                        serviceImplementation="com.reason.ide.settings.ReasonSettings"/>
        <projectConfigurable id="settings.reason" groupId="language" displayName="Reason"
                             instance="com.reason.ide.settings.ReasonSettingsConfigurable"/>

        <configurationType implementation="com.reason.ide.repl.ReplRunConfigurationType"/>
        <!--<facetType implementation="BsFacetType" id="bucklescript"/>-->
        <!--<framework.detector implementation="BsFrameworkDetector"/>-->

        <!--
         | Others
         -->

        <internalFileTemplate name="Reason Module"/>
        <internalFileTemplate name="OCaml Module"/>

        <typedHandler implementation="com.reason.ide.ORTypedHandler" id="RmlTypedHandler"/>

        <lang.refactoringSupport language="OCaml"
                                 implementationClass="com.reason.ide.ORRefactoringSupportProvider"/>
        <lang.refactoringSupport language="ReasonML"
                                 implementationClass="com.reason.ide.ORRefactoringSupportProvider"/>

        <iconProvider implementation="com.reason.icons.IconProvider"/>

        <colorSettingsPage implementation="com.reason.ide.settings.ReasonColorSettingsPage"/>
        <colorSettingsPage implementation="com.reason.ide.settings.DuneColorSettingsPage"/>

        <additionalTextAttributes scheme="Default" file="colorSchemes/ReasonDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/ReasonDarcula.xml"/>

        <annotator language="ReasonML" implementationClass="com.reason.ide.highlight.RmlSyntaxAnnotator"/>
        <annotator language="OCaml" implementationClass="com.reason.ide.highlight.OclSyntaxAnnotator"/>

        <externalAnnotator language="ReasonML" implementationClass="com.reason.build.annotations.ErrorAnnotator"/>
        <externalAnnotator language="OCaml" implementationClass="com.reason.build.annotations.ErrorAnnotator"/>

        <completion.contributor language="ReasonML"
                                implementationClass="com.reason.ide.insight.RmlCompletionContributor"/>
        <completion.contributor language="ReasonML"
                                implementationClass="com.reason.ide.insight.RmlKeywordCompletionContributor"/>

        <completion.contributor language="OCaml" implementationClass="com.reason.ide.insight.OclCompletionContributor"/>
        <completion.contributor language="OCaml"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>

        <!--<codeInsight.parameterNameHints language="ReasonML" implementationClass="SignatureProvider"/>-->
        <editor.linePainter implementation="com.reason.ide.hints.OREditorLinePainter"/>

        <!-- Specifies semicolon-separated list of paths which should be added to the classpath of the compile server -->
        <compileServer.plugin classpath="jps-builder.jar;jps-shared.jar"/>

        <languageInjector implementation="com.reason.ide.JsInjector"/>

        <!--
         | Intentions
         -->

        <intentionAction>
            <className>com.reason.ide.intentions.FunctionBracesIntention</className>
            <category>Reason</category>
        </intentionAction>
        <intentionAction>
            <className>com.reason.ide.intentions.ExpandLocalOpenIntention</className>
            <category>Reason</category>
        </intentionAction>

        <!--
         | UI
         -->

        <toolWindow id="Bucklescript" anchor="bottom" icon="/icons/bucklescript.png"
                    factoryClass="com.reason.build.console.BsToolWindowFactory"/>

        <codeInsight.parameterInfo language="ReasonML"
                                   implementationClass="com.reason.ide.hints.ORParameterInfoHandlerWithTabActionSupport"/>
    </extensions>

</idea-plugin>
