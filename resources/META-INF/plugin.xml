<idea-plugin version="2">
    <id>reasonml</id>
    <name>ReasonML language plugin</name>
    <version>0.10</version>
    <vendor email="giraud.contact@yahoo.fr" url="https://github.com/giraud/reasonml-idea-plugin">hgiraud</vendor>

    <description><![CDATA[
      ReasonÂ language plugin.
    ]]></description>

    <change-notes><![CDATA[
      <ul>
      <li>Improved lexer</li>
      <li>Starting implementing module reference (Go to declaration might work on 'open' statement)</li>
      </ul>

      <p>Work in progress. This is a plugin preview, use for tests only.</p>
      <p>To see how to integrate reason tools (merlin, refmt), go to the website.</p>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="141.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>

    <application-components>
        <component>
            <interface-class>com.reason.merlin.MerlinService</interface-class>
            <implementation-class>com.reason.merlin.MerlinServiceComponent</implementation-class>
        </component>
        <component>
            <implementation-class>com.reason.ide.ReasonDocumentManager</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>com.reason.ide.ReasonMLProjectTracker</implementation-class>
        </component>
        <component>
            <implementation-class>com.reason.bs.BucklescriptCompiler</implementation-class>
        </component>
        <component>
            <interface-class>com.reason.bs.BucklescriptErrorsManager</interface-class>
            <implementation-class>com.reason.bs.BucklescriptErrorsManagerImpl</implementation-class>
        </component>
    </project-components>

    <extensions defaultExtensionNs="com.intellij">
        <fileTypeFactory implementation="com.reason.ide.ReasonMLInterfaceFileTypeFactory"/>
        <fileTypeFactory implementation="com.reason.ide.ReasonMLFileTypeFactory"/>

        <lang.parserDefinition language="ReasonML" implementationClass="com.reason.lang.ReasonMLParserDefinition"/>
        <lang.syntaxHighlighterFactory key="ReasonML"
                                       implementationClass="com.reason.ide.highlight.ReasonMLSyntaxHighlighterFactory"/>
        <colorSettingsPage implementation="com.reason.ide.settings.ReasonMLColorSettingsPage"/>

        <annotator language="ReasonML" implementationClass="com.reason.ide.highlight.ReasonMLAnnotator"/>
        <externalAnnotator language="ReasonML" implementationClass="com.reason.ide.highlight.MerlinErrorAnnotator" />
        <externalAnnotator language="ReasonML" implementationClass="com.reason.bs.BucklescriptErrorAnnotator" />

        <completion.contributor language="ReasonML" implementationClass="com.reason.ide.ReasonMLCompletionContributor"/>

        <lang.psiStructureViewFactory language="ReasonML"
                                      implementationClass="com.reason.ide.structure.ReasonMLStructureViewFactory"/>
        <lang.commenter language="ReasonML" implementationClass="com.reason.ide.ReasonMLCommenter"/>
        <lang.foldingBuilder language="ReasonML" implementationClass="com.reason.ide.folding.ReasonMLFoldingBuilder"/>
        <lang.braceMatcher language="ReasonML" implementationClass="com.reason.ide.ReasonMLPairedBraceMatcher"/>

        <codeInsight.parameterNameHints language="ReasonML" implementationClass="com.reason.ide.hints.SignatureProvider"/>
        <editor.linePainter implementation="com.reason.ide.hints.ReasonMLEditorLinePainter"/>

        <toolWindow id="Bucklescript" anchor="bottom" factoryClass="com.reason.bs.BucklescriptToolWindowFactory"/>

        <lang.elementManipulator forClass="com.reason.psi.ReasonMLModule" implementationClass="com.reason.psi.RmlModuleManipulator"/>
        <lang.elementManipulator forClass="com.reason.psi.ReasonMLModuleName" implementationClass="com.reason.psi.RmlModuleNameManipulator"/>

        <projectService serviceInterface="com.reason.merlin.MerlinService"
                        serviceImplementation="com.reason.merlin.MerlinServiceComponent"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <action id="reasonML.refmt" class="com.reason.ide.format.RefmtAction" text="Reformat code (refmt)">
            <add-to-group group-id="CodeFormatGroup" anchor="after" relative-to-action="ReformatCode"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift R"/>
        </action>
    </actions>

</idea-plugin>
